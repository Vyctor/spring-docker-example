services:
  spring-dockerized-app:
    build:
      context: .  # Directory to build Docker image from.
      dockerfile: Dockerfile  # Dockerfile to use for building the image.
    ports:
      - 8080:8080  # Maps port 8080 in the container to port 18080 on the host.
    depends_on:
      mysqldb:
        condition: service_healthy  # Waits for 'mysqldb' to be healthy before starting.
    env_file:
      - .env  # Loads environment variables from the .env file.
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/${MYSQL_DATABASE}  # Database URL.
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}  # Database username.
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}  # Database password.
      - SPRING_CONFIG_LOCATION=file:/app/application.yaml  # Location of application properties.
    volumes:
      - ./src/main/resources/application.yaml:/app/application.yaml  # Mounts properties file.

  mysqldb:
    image: mysql:latest  # MySQL image version.
    ports:
      - 13306:3306  # Maps port 3306 in the container to port 13306 on the host.
    env_file:
      - .env  # Loads environment variables from the .env file.
    volumes:
      - mysql-data:/var/lib/mysql  # Persistent storage for MySQL data.
      - ./src/main/resources/db_migration/init_all.sql:/docker-entrypoint-initdb.d/init.sql  # Initialization script.
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]  # Health check command.
      retries: 10  # Number of retries before considering the service unhealthy.
      interval: 3s  # Time between retries.
      timeout: 30s  # Timeout for each health check.

volumes:
  mysql-data:  # Named volume for MySQL data.
